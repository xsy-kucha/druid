{"version":3,"sources":["webpack:///./src/components/map/amapEcharts.vue","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/echarts-extension-amap/dist/echarts-extension-amap.esm.js","webpack:///src/components/map/amapEcharts.vue","webpack:///./src/components/map/amapEcharts.vue?eb01","webpack:///./src/components/map/amapEcharts.vue?26aa","webpack:///./src/eventConfig.js"],"names":["render","_vm","this","_c","_self","staticStyle","ref","attrs","staticRenderFns","init","apply","arguments","installLabelLayout","isV5","split","isAMap2X","AMap","version","v2Equal","a","b","logMap","logWarn","tag","msg","once","log","concat","console","warn","clearLogMap","dataToCoordSize","dataSize","dataItem","map","dimIdx","val","halfSize","p1","p2","Math","abs","dataToPoint","excludedOptions","AMapCoordSys","amap","api","_amap","_api","_mapOffset","AMapCoordSysProto","prototype","setZoom","zoom","_zoom","setCenter","center","lnglat","LngLat","_center","lngLatToContainer","setMapOffset","mapOffset","setAMap","getAMap","data","px","x","y","pointToData","pt","containerToLngLat","Pixel","lng","lat","getViewRect","BoundingRect","getWidth","getHeight","getRoamTransform","create","prepareCustoms","rect","coordSys","type","width","height","coord","bind","size","ecModel","amapCoordSys","eachComponent","amapModel","Error","echartsLayerInteractive","get","root","getDom","painter","getZr","viewportRoot","getViewportRoot","className","style","visibility","amapRoot","querySelector","left","top","removeChild","document","createElement","cssText","appendChild","options","clone","each","key","Map","on","setEChartsLayer","getViewportRootOffset","offsetLeft","offsetTop","oldEChartsLayerInteractive","__echartsLayerInteractive","setEChartsLayerInteractive","amapCenter","getCenter","amapZoom","getZoom","centerOrZoomChanged","setZoomAndCenter","originalMapStyle","__mapStyle","newMapStyle","setMapStyle","setLang","originalMapLang","__mapLang","newMapLang","__mapOffset","coordinateSystem","eachSeries","seriesModel","dimensions","_isAMap2X","AMapModel","__amap","layer","__echartsLayer","getEChartsLayer","setEChartsLayerVisiblity","visible","display","interactive","option","pointerEvents","setCenterAndZoom","defaultOption","isHotspot","resizeEnable","renderOnMoving","largeMode","returnMapCameraState","AMapModel$1","extend","AMapView","_isFirstRender","rendering","offsetEl","getContainer","viewMode","getViewMode_","is3DMode","moveHandler","e","offsetElStyle","parseInt","viewportRootStyle","actionParams","animation","duration","camera","rotation","getRotation","pitch","getPitch","scale","getScale","bounds","getBounds","dispatchAction","off","_moveHandler","_resizeHandler","_moveStartHandler","_moveEndHandler","setTimeout","moveEndHandler","nativeSetPicth","setPitch","nativeSetRotation","setRotation","resizeHandler","resize","dispose","component","getComponent","destroy","AMapView$1","registers","registerComponentModel","extendComponentModel","registerComponentView","extendComponentView","registerCoordinateSystem","registerAction","event","update","payload","location","location2Events","eventList","value","res","name","currentData","pollutionData","maxTime","PollutionType2Keys","mounted","window","mapStyle","echartsLayerZIndex","tooltip","trigger","enterable","formatter","html","series","symbolSize","encode","label","position","show","itemStyle","normal","color","emphasis","showEffectOn","rippleEffect","brushType","hoverAnimation","shadowBlur","shadowColor","zlevel","chart","right","methods","onClickTooltipItem","eventId","getTooltipHtml","getInfo","setData","newData","newPollutionType2Color","oneStep","newBreakOut","dateFormat","requestInterval","defaultLimit","maxLimit","minLimit","initTimeRange","bufferSize","maxRequestStep","stepUnit","initModal","defaultUrl","defaultTimeRange","Date","defaultToken","initDownloadReport","defaultDownloadReportUrl","defaultDownloadReportToken","lnglatDecimal"],"mappings":"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","file":"js/chunk-9ad55310.e1a350cf.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\",\"position\":\"relative\"}},[_c('div',{ref:\"container\",staticStyle:{\"width\":\"100%\",\"height\":\"calc(100% - 10px)\"},attrs:{\"id\":\"container\"}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport * from './export/core.js';\nimport { use } from './extension.js';\nimport { init } from './core/echarts.js';\nimport { install as CanvasRenderer } from './renderer/installCanvasRenderer.js';\nimport { install as DatasetComponent } from './component/dataset/install.js'; // Default to have canvas renderer and dataset for compitatble reason.\n\nuse([CanvasRenderer, DatasetComponent]); // TODO: Compatitable with the following code\n// import echarts from 'echarts/lib/echarts.js'\n\nexport default {\n  init: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable-next-line */\n      console.error(\"\\\"import echarts from 'echarts/lib/echarts.js'\\\" is not supported anymore. Use \\\"import * as echarts from 'echarts/lib/echarts.js'\\\" instead;\");\n    } // @ts-ignore\n\n\n    return init.apply(null, arguments);\n  }\n}; // Import label layout by default.\n// TODO remove\n\nimport { installLabelLayout } from './label/installLabelLayout.js';\nuse(installLabelLayout);","/*!\n * echarts-extension-amap \n * @version 1.10.1\n * @author plainheart\n * \n * MIT License\r\n * \r\n * Copyright (c) 2019-2021 Zhongxiang.Wang\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n * \n */\nimport * as echarts from 'echarts/lib/echarts';\nimport { version as version$1, graphic, matrix, util, ComponentModel, ComponentView, throttle, getInstanceByDom } from 'echarts/lib/echarts';\n\nvar isV5 = version$1.split('.')[0] > 4;\n/* global AMap */\n// `AMap.version` only exists in AMap 2.x\n// For AMap 1.x, it's `AMap.v`\n// use function instead of constant to allow importing the plugin before AMap is loaded\n\nvar isAMap2X = function isAMap2X() {\n  return AMap.version >= 2;\n};\nfunction v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\nvar logMap = {};\nfunction logWarn(tag, msg, once) {\n  var log = \"[ECharts][Extension][AMap]\".concat(tag ? ' ' + tag + ':' : '', \" \").concat(msg);\n  once && logMap[log] || console.warn(log);\n  once && (logMap[log] = true);\n}\nfunction clearLogMap() {\n  logMap = {};\n}\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return util.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n} // exclude private and unsupported options\n\n\nvar excludedOptions = ['echartsLayerZIndex', // DEPRECATED since v1.9.0\n'echartsLayerInteractive', 'renderOnMoving', 'largeMode', 'returnMapCameraState', 'layers'];\n\nfunction AMapCoordSys(amap, api) {\n  this._amap = amap;\n  this._api = api;\n  this._mapOffset = [0, 0]; // this.dimensions = ['lng', 'lat']\n}\n\nvar AMapCoordSysProto = AMapCoordSys.prototype;\n\nAMapCoordSysProto.setZoom = function (zoom) {\n  this._zoom = zoom;\n};\n\nAMapCoordSysProto.setCenter = function (center) {\n  var lnglat = new AMap.LngLat(center[0], center[1]);\n  this._center = this._amap.lngLatToContainer(lnglat);\n};\n\nAMapCoordSysProto.setMapOffset = function (mapOffset) {\n  this._mapOffset = mapOffset;\n};\n\nAMapCoordSysProto.setAMap = function (amap) {\n  this._amap = amap;\n};\n\nAMapCoordSysProto.getAMap = function () {\n  return this._amap;\n};\n\nAMapCoordSysProto.dataToPoint = function (data) {\n  var lnglat = new AMap.LngLat(data[0], data[1]);\n\n  var px = this._amap.lngLatToContainer(lnglat);\n\n  var mapOffset = this._mapOffset;\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\n};\n\nAMapCoordSysProto.pointToData = function (pt) {\n  var mapOffset = this._mapOffset;\n\n  var lnglat = this._amap.containerToLngLat(new AMap.Pixel(pt[0] + mapOffset[0], pt[1] + mapOffset[1]));\n\n  return [lnglat.lng, lnglat.lat];\n};\n\nAMapCoordSysProto.getViewRect = function () {\n  var api = this._api;\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\n};\n\nAMapCoordSysProto.getRoamTransform = function () {\n  return matrix.create();\n};\n\nAMapCoordSysProto.prepareCustoms = function () {\n  var rect = this.getViewRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'amap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: util.bind(this.dataToPoint, this),\n      size: util.bind(dataToCoordSize, this)\n    }\n  };\n};\n\nAMapCoordSys.create = function (ecModel, api) {\n  var amapCoordSys;\n  ecModel.eachComponent('amap', function (amapModel) {\n    if (typeof AMap === 'undefined') {\n      throw new Error('AMap api is not loaded');\n    }\n\n    if (amapCoordSys) {\n      throw new Error('Only one amap component can exist');\n    }\n\n    var amap = amapModel.getAMap();\n    var echartsLayerInteractive = amapModel.get('echartsLayerInteractive');\n\n    if (!amap) {\n      var root = api.getDom();\n      var painter = api.getZr().painter;\n      var viewportRoot = painter.getViewportRoot();\n      viewportRoot.className = 'amap-ec-layer'; // PENDING not hidden?\n\n      viewportRoot.style.visibility = 'hidden'; // Not support IE8\n\n      var amapRoot = root.querySelector('.ec-extension-amap');\n\n      if (amapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in AMapView\n        viewportRoot.style.left = '0px';\n        viewportRoot.style.top = '0px';\n        root.removeChild(amapRoot);\n      }\n\n      amapRoot = document.createElement('div');\n      amapRoot.className = 'ec-extension-amap';\n      amapRoot.style.cssText = 'position:absolute;top:0;left:0;bottom:0;right:0;';\n      root.appendChild(amapRoot);\n      var options = util.clone(amapModel.get());\n\n      if ('echartsLayerZIndex' in options) {\n        logWarn('DEPRECATED', 'the option `echartsLayerZIndex` has been removed since v1.9.0, use `echartsLayerInteractive` instead.');\n      } // delete excluded options\n\n\n      util.each(excludedOptions, function (key) {\n        delete options[key];\n      });\n      amap = new AMap.Map(amapRoot, options); // PENDING: should update the model option when the user call map.setXXX?\n      // const nativeSetMapStyle = amap.setMapStyle\n      // const nativeSetLang = amap.setLang\n      // // PENDING\n      // amap.setMapStyle = function () {\n      //   nativeSetMapStyle.apply(this, arguments)\n      //   amapModel.__mapStyle = amap.getMapStyle()\n      // }\n      // // PENDING\n      // nativeSetLang && (amap.setLang = function() {\n      //   nativeSetLang.apply(this, arguments)\n      //   amapModel.__mapLang = amap.getLang()\n      // })\n      // use `complete` callback to avoid NPE when first load amap\n\n      amap.on('complete', function () {\n        amapRoot.querySelector('.amap-maps').appendChild(viewportRoot); // PENDING\n\n        viewportRoot.style.visibility = '';\n      });\n      amapModel.setAMap(amap);\n      amapModel.setEChartsLayer(viewportRoot); // Override\n\n      painter.getViewportRootOffset = function () {\n        return {\n          offsetLeft: 0,\n          offsetTop: 0\n        };\n      };\n    }\n\n    var oldEChartsLayerInteractive = amapModel.__echartsLayerInteractive;\n\n    if (oldEChartsLayerInteractive !== echartsLayerInteractive) {\n      amapModel.setEChartsLayerInteractive(echartsLayerInteractive);\n      amapModel.__echartsLayerInteractive = echartsLayerInteractive;\n    }\n\n    var center = amapModel.get('center');\n    var zoom = amapModel.get('zoom');\n\n    if (center && zoom) {\n      var amapCenter = amap.getCenter();\n      var amapZoom = amap.getZoom();\n      var centerOrZoomChanged = amapModel.centerOrZoomChanged([amapCenter.lng, amapCenter.lat], amapZoom);\n\n      if (centerOrZoomChanged) {\n        amap.setZoomAndCenter(zoom, new AMap.LngLat(center[0], center[1]));\n      }\n    } // update map style(#13)\n\n\n    var originalMapStyle = amapModel.__mapStyle;\n    var newMapStyle = amapModel.get('mapStyle');\n\n    if (originalMapStyle !== newMapStyle) {\n      amap.setMapStyle(amapModel.__mapStyle = newMapStyle);\n    } // update map lang\n    // PENDING: AMap 2.x does not support `setLang` yet\n\n\n    if (amap.setLang) {\n      var originalMapLang = amapModel.__mapLang;\n      var newMapLang = amapModel.get('lang');\n\n      if (originalMapLang !== newMapLang) {\n        amap.setLang(amapModel.__mapLang = newMapLang);\n      }\n    } else {\n      logWarn('CAVEAT', 'The current map doesn\\'t support `setLang` API!', true);\n    }\n\n    amapCoordSys = new AMapCoordSys(amap, api);\n    amapCoordSys.setMapOffset(amapModel.__mapOffset || [0, 0]);\n    amapCoordSys.setZoom(zoom);\n    amapCoordSys.setCenter(center);\n    amapModel.coordinateSystem = amapCoordSys;\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'amap') {\n      seriesModel.coordinateSystem = amapCoordSys;\n    }\n  });\n};\n\nAMapCoordSysProto.dimensions = AMapCoordSys.dimensions = ['lng', 'lat'];\n\nvar AMapModel = {\n  type: 'amap',\n  setAMap: function setAMap(amap) {\n    this.__amap = amap;\n  },\n  getAMap: function getAMap() {\n    return this.__amap;\n  },\n  setEChartsLayer: function setEChartsLayer(layer) {\n    this.__echartsLayer = layer;\n  },\n  getEChartsLayer: function getEChartsLayer() {\n    return this.__echartsLayer;\n  },\n  setEChartsLayerVisiblity: function setEChartsLayerVisiblity(visible) {\n    this.__echartsLayer.style.display = visible ? 'block' : 'none';\n  },\n  // FIXME: NOT SUPPORT <= IE 10\n  setEChartsLayerInteractive: function setEChartsLayerInteractive(interactive) {\n    this.option.echartsLayerInteractive = !!interactive;\n    this.__echartsLayer.style.pointerEvents = interactive ? 'auto' : 'none';\n  },\n  setCenterAndZoom: function setCenterAndZoom(center, zoom) {\n    this.option.center = center;\n    this.option.zoom = zoom;\n  },\n  centerOrZoomChanged: function centerOrZoomChanged(center, zoom) {\n    var option = this.option;\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\n  },\n  defaultOption: {\n    center: [116.397428, 39.90923],\n    zoom: 5,\n    isHotspot: false,\n    resizeEnable: true,\n    // extension specific options\n    // echartsLayerZIndex: 2000, // DEPRECATED since v1.9.0\n    echartsLayerInteractive: true,\n    renderOnMoving: true,\n    largeMode: false,\n    // since v1.10.0\n    returnMapCameraState: false\n  }\n};\nvar AMapModel$1 = isV5 ? ComponentModel.extend(AMapModel) : AMapModel;\n\nvar _isAMap2X;\n\nvar AMapView = {\n  type: 'amap',\n  init: function init() {\n    this._isFirstRender = true;\n    _isAMap2X = isAMap2X();\n  },\n  render: function render(amapModel, ecModel, api) {\n    var rendering = true;\n    var amap = amapModel.getAMap();\n    var viewportRoot = api.getZr().painter.getViewportRoot();\n    var offsetEl = amap.getContainer();\n    var coordSys = amapModel.coordinateSystem;\n    var renderOnMoving = amapModel.get('renderOnMoving');\n    var resizeEnable = amapModel.get('resizeEnable');\n    var largeMode = amapModel.get('largeMode');\n    var returnMapCameraState = amapModel.get('returnMapCameraState');\n    var viewMode = amap.getViewMode_();\n    var is3DMode = viewMode === '3D';\n\n    var moveHandler = function moveHandler(e) {\n      if (rendering) {\n        return;\n      }\n\n      var offsetElStyle = offsetEl.style;\n      var mapOffset = [-parseInt(offsetElStyle.left, 10) || 0, -parseInt(offsetElStyle.top, 10) || 0]; // only update style when map offset changed\n\n      var viewportRootStyle = viewportRoot.style;\n      var offsetLeft = mapOffset[0] + 'px';\n      var offsetTop = mapOffset[1] + 'px';\n\n      if (viewportRootStyle.left !== offsetLeft) {\n        viewportRootStyle.left = offsetLeft;\n      }\n\n      if (viewportRootStyle.top !== offsetTop) {\n        viewportRootStyle.top = offsetTop;\n      }\n\n      coordSys.setMapOffset(amapModel.__mapOffset = mapOffset);\n      var actionParams = {\n        type: 'amapRoam',\n        animation: {\n          // compatible with ECharts 5.x\n          // no delay for rendering but remain animation of elements\n          duration: 0\n        }\n      };\n\n      if (returnMapCameraState) {\n        e = e || {};\n        var center = e.center;\n\n        if (!center) {\n          // normalize center LngLat to Array\n          center = amap.getCenter();\n          center = [center.lng, center.lat];\n        }\n\n        actionParams.camera = {\n          viewMode: viewMode,\n          center: center,\n          zoom: e.zoom || amap.getZoom(),\n          rotation: e.rotation == null ? amap.getRotation() : e.rotation,\n          pitch: e.pitch == null ? amap.getPitch() : e.pitch,\n          scale: amap.getScale(),\n          bounds: amap.getBounds()\n        };\n      }\n\n      api.dispatchAction(actionParams);\n    };\n\n    amap.off('mapmove', this._moveHandler);\n    amap.off('moveend', this._moveHandler);\n    amap.off('viewchange', this._moveHandler);\n    amap.off('camerachange', this._moveHandler);\n    amap.off('zoom', this._moveHandler);\n\n    if (this._resizeHandler) {\n      amap.off('resize', this._resizeHandler);\n    }\n\n    if (this._moveStartHandler) {\n      amap.off('movestart', this._moveStartHandler);\n    }\n\n    if (this._moveEndHandler) {\n      amap.off('moveend', this._moveEndHandler);\n      amap.off('zoomend', this._moveEndHandler);\n    }\n\n    amap.on(renderOnMoving ? _isAMap2X ? 'viewchange' : is3DMode ? 'camerachange' : 'mapmove' : 'moveend', // FIXME: bad performance in 1.x in the cases with large data, use debounce?\n    // moveHandler\n    !_isAMap2X && largeMode ? moveHandler = throttle(moveHandler, 20, true) : moveHandler);\n    this._moveHandler = moveHandler;\n\n    if (renderOnMoving && !(_isAMap2X && is3DMode)) {\n      // need to listen to zoom if 1.x & 2D mode\n      // FIXME: unnecessary `mapmove` event triggered when zooming\n      amap.on('zoom', moveHandler);\n    }\n\n    if (!renderOnMoving) {\n      amap.on('movestart', this._moveStartHandler = function () {\n        setTimeout(function () {\n          amapModel.setEChartsLayerVisiblity(false);\n        }, 0);\n      });\n\n      var moveEndHandler = this._moveEndHandler = function (e) {\n        (!e || e.type !== 'moveend') && moveHandler(e);\n        setTimeout(function () {\n          amapModel.setEChartsLayerVisiblity(true);\n        }, _isAMap2X || !largeMode ? 0 : 20);\n      };\n\n      amap.on('moveend', moveEndHandler);\n      amap.on('zoomend', moveEndHandler);\n\n      if (this._isFirstRender && is3DMode) {\n        // FIXME: not rewrite AMap instance method\n        var nativeSetPicth = amap.setPitch;\n        var nativeSetRotation = amap.setRotation;\n\n        amap.setPitch = function () {\n          nativeSetPicth.apply(this, arguments);\n          moveEndHandler();\n        };\n\n        amap.setRotation = function () {\n          nativeSetRotation.apply(this, arguments);\n          moveEndHandler();\n        };\n      }\n    }\n\n    if (resizeEnable) {\n      var resizeHandler = function resizeHandler() {\n        getInstanceByDom(api.getDom()).resize();\n      };\n\n      if (!_isAMap2X && largeMode) {\n        resizeHandler = throttle(resizeHandler, 20, true);\n      }\n\n      amap.on('resize', this._resizeHandler = resizeHandler);\n    }\n\n    this._isFirstRender = rendering = false;\n  },\n  dispose: function dispose(ecModel) {\n    clearLogMap();\n    var component = ecModel.getComponent('amap');\n\n    if (component) {\n      component.getAMap().destroy();\n      component.setAMap(null);\n      component.setEChartsLayer(null);\n\n      if (component.coordinateSystem) {\n        component.coordinateSystem.setAMap(null);\n        component.coordinateSystem = null;\n      }\n\n      delete this._moveHandler;\n      delete this._resizeHandler;\n      delete this._moveStartHandler;\n      delete this._moveEndHandler;\n    }\n  }\n};\nvar AMapView$1 = isV5 ? ComponentView.extend(AMapView) : AMapView;\n\nvar name = \"echarts-extension-amap\";\nvar version = \"1.10.1\";\n\n/**\n * AMap component extension\n */\nfunction install(registers) {\n  // Model\n  isV5 ? registers.registerComponentModel(AMapModel$1) : registers.extendComponentModel(AMapModel$1); // View\n\n  isV5 ? registers.registerComponentView(AMapView$1) : registers.extendComponentView(AMapView$1); // Coordinate System\n\n  registers.registerCoordinateSystem('amap', AMapCoordSys); // Action\n\n  registers.registerAction({\n    type: 'amapRoam',\n    event: 'amapRoam',\n    update: 'updateLayout'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent('amap', function (amapModel) {\n      var amap = amapModel.getAMap();\n      var center = amap.getCenter();\n      amapModel.setCenterAndZoom([center.lng, center.lat], amap.getZoom());\n    });\n  });\n}\n\n/**\r\n * TODO use `echarts/core` rather than `echarts/lib/echarts`\r\n * to avoid self-registered `CanvasRenderer` and `DataSetComponent` in Apache ECharts 5\r\n * but it's not compatible with echarts v4. Leave it to 2.0.\r\n */\nisV5 ? echarts.use(install) : install(echarts);\n\nexport { name, version };\n","<template>\r\n  <div style=\"width: 100%; height: 100%;position: relative\">\r\n    <!--        <button @click=\"getInfo\"> getInfo</button>-->\r\n    <div ref=\"container\" style=\"width: 100%; height: calc(100% - 10px)\" id=\"container\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'echarts-extension-amap';\r\nimport * as echarts from 'echarts';\r\nimport eventConfig from \"../../eventConfig\";\r\n\r\nlet newEventSteps = eventConfig.event.newBreakOut\r\nlet AMap = window.AMap\r\nlet chart = null\r\nlet amap = null\r\nlet convertData = function (data, newBreakOut) {\r\n  let res = [];\r\n  //为避免完全相同经纬度发生多件事情\r\n  let location2Events = {}\r\n  for (let i = 0; i < data.length; i++) {\r\n    let location = data[i].location.lnglat;\r\n    if (!location) continue\r\n    location[0] = location[0].toFixed(eventConfig.lnglatDecimal) * 1\r\n    location[0] = location[0].toFixed(eventConfig.lnglatDecimal) * 1\r\n    let locationStr = location.join(',')\r\n    if (!location2Events[locationStr])\r\n      location2Events[locationStr] = {\r\n        location,\r\n        eventList: []\r\n      }\r\n    location2Events[locationStr].eventList.push(data[i])\r\n  }\r\n  for (let locationStr in location2Events) {\r\n    let eventList = location2Events[locationStr].eventList\r\n    let location = location2Events[locationStr].location;\r\n    let value = 0\r\n    for (let i = 0; i < eventList.length; i++) {\r\n      value += eventList[i].newsList.length\r\n    }\r\n    res.push({\r\n      name: eventList[0].name + (eventList.length > 1 ? '等' + eventList.length + '件' + (newBreakOut ? '新发' : '') + '污染事件' : ''),\r\n      value: location.concat([value * 5]),\r\n      eventList\r\n    });\r\n  }\r\n  return res;\r\n};\r\n\r\nexport default {\r\n  name: \"amapEcharts\",\r\n  data() {\r\n    return {\r\n      currentData: [],\r\n      pollutionData: [],\r\n      maxTime: 0,\r\n      PollutionType2Keys: []\r\n    }\r\n  },\r\n  mounted() {\r\n    window.onClickTooltipItem = this.onClickTooltipItem\r\n    var option = {\r\n      // amap component option\r\n      amap: {\r\n        // enable 3D mode\r\n        // Note that it's suggested to enable 3D mode to improve echarts rendering.\r\n        // initial options of AMap\r\n        // See https://lbs.amap.com/api/javascript-api/reference/map#MapOption for details\r\n        // initial map center [lng, lat]\r\n        center: [112.06, 36.86],\r\n        // initial map zoom\r\n        zoom: 5,\r\n        // whether the map and echarts automatically handles browser window resize to update itself.\r\n        resizeEnable: true,\r\n        // customized map style, see https://lbs.amap.com/dev/mapstyle/index for details\r\n        mapStyle: 'amap://styles/fe7fe61b2a9319dbc82d6c20df0cd8ea',\r\n        // whether echarts layer should be rendered when the map is moving. Default is true.\r\n        // if false, it will only be re-rendered after the map `moveend`.\r\n        // It's better to set this option to false if data is large.\r\n        renderOnMoving: true,\r\n        // the zIndex of echarts layer for AMap, default value is 2000.\r\n        // deprecated since v1.9.0, use `echartsLayerInteractive` instead.\r\n        echartsLayerZIndex: 2000,\r\n        // whether echarts layer is interactive. Default value is true\r\n        // supported since v1.9.0\r\n        echartsLayerInteractive: true,\r\n        // whether to enable large mode. Default value is false\r\n        // supported since v1.9.0\r\n        largeMode: false\r\n        // Note: Please DO NOT use the initial option `layers` to add Satellite/RoadNet/Other layers now.\r\n        // There are some bugs about it, we can use `amap.add` instead.\r\n        // Refer to the codes at the bottom.\r\n\r\n        // More initial options...\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        enterable: true,\r\n\r\n        formatter: (params) => {\r\n          // return params.marker + ' ' + params.name\r\n          let html = ''\r\n          for (let i in params.data.eventList)\r\n            html += this.getTooltipHtml(params.data.eventList[i])\r\n          return '<div style=\"pointer-events: auto\"><div class=\"ivu-cell-group\">' + html + '</div></div>'\r\n        },\r\n        \"backgroundColor\": \"rgba(0,0,0,0.5)\",\r\n        \"borderWidth\": 0,\r\n        \"textStyle\": {\r\n          \"color\": \"#fff\"\r\n        }\r\n      },\r\n      animation: false,\r\n      series: [\r\n        {\r\n          name: '污染事件',\r\n          type: 'scatter',\r\n          // use `amap` as the coordinate system\r\n          coordinateSystem: 'amap',\r\n          // data items [[lng, lat, value], [lng, lat, value], ...]\r\n          data: convertData(this.currentData),\r\n          symbolSize: function (val) {\r\n            return Math.log(val[2]) * 10;\r\n            // return val[2];\r\n          },\r\n          encode: {\r\n            value: 2\r\n          },\r\n          label: {\r\n            formatter: '{b}',\r\n            position: 'right',\r\n            show: false\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: []\r\n            }\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true\r\n            }\r\n          }\r\n        },\r\n        // {\r\n        //   name: '污染事件热度',\r\n        //   type: 'heatmap',\r\n        //   // use `amap` as the coordinate system\r\n        //   coordinateSystem: 'amap',\r\n        //   // data items [[lng, lat, value], [lng, lat, value], ...]\r\n        //   data: convertData(this.currentData),\r\n        //   pointSize: 10,\r\n        //   blurSize: 15,\r\n        // },\r\n        {\r\n          name: '新发污染事件',\r\n          type: 'effectScatter',\r\n          coordinateSystem: 'amap',\r\n          data: convertData(this.currentData.filter(data => data.firstReportTime >= this.maxTime - newEventSteps), true),\r\n          symbolSize: function (val) {\r\n            return Math.log(val[2]) * 10;\r\n            // return val[2]\r\n          },\r\n          encode: {\r\n            value: 2\r\n          },\r\n          showEffectOn: 'render',\r\n          rippleEffect: {\r\n            brushType: 'stroke'\r\n          },\r\n          hoverAnimation: true,\r\n          label: {\r\n            formatter: '{b}',\r\n            position: 'right',\r\n            show: true,\r\n            color: 'white'\r\n          },\r\n          itemStyle: {\r\n            color: [],\r\n            shadowBlur: 10,\r\n            shadowColor: '#333'\r\n          },\r\n          zlevel: 1\r\n        },\r\n      ]\r\n    };\r\n    // initialize echart\r\n    chart = echarts.init(document.getElementById('container'));\r\n    chart.setOption(option);\r\n    // get AMap extension component\r\n    let amapComponent = chart.getModel().getComponent('amap');\r\n    // get the instance of AMap\r\n    amap = amapComponent.getAMap();\r\n    // operations below are the same as amap\r\n\r\n    let controlBar = new AMap.ControlBar({\r\n      position: {\r\n        right: '10px',\r\n        top: '10px'\r\n      }\r\n    });\r\n\r\n    let toolBar = new AMap.ToolBar({\r\n      position: {\r\n        right: '40px',\r\n        top: '110px'\r\n      }\r\n    });\r\n    amap.addControl(controlBar);\r\n    amap.addControl(toolBar);\r\n    // add layers\r\n    // var satelliteLayer = new AMap.TileLayer.Satellite();\r\n    // var roadNetLayer = new AMap.TileLayer.RoadNet();\r\n    // amap.add([satelliteLayer, roadNetLayer]);\r\n    // Add a marker to map\r\n    // amap.add(new AMap.Marker({\r\n    //   position: [115, 35]\r\n    // }));\r\n    // Make the overlay layer of AMap interactive\r\n    // amapComponent.setEChartsLayerInteractive(false);\r\n  },\r\n  methods: {\r\n    onClickTooltipItem(eventId) {\r\n      this.$emit('eventClick', eventId)\r\n    },\r\n    getTooltipHtml(event) {\r\n      return '<div class=\"ivu-cell\" onclick=\"onClickTooltipItem(\\'' + event.id + '\\')\">' +\r\n          '<div class=\"ivu-cell-link\">' +\r\n          '<div class=\"ivu-cell-item\">' +\r\n          '<div class=\"ivu-cell-main\">' +\r\n          '<div class=\"ivu-cell-title\">' + event.name + '</div>' +\r\n          '</div></div></div></div>'\r\n    },\r\n    getInfo() {\r\n      // let zoom = amap.getZoom()\r\n      // let center = amap.getCenter()\r\n    },\r\n    setData(newData, maxTime, newPollutionType2Color) {\r\n      this.currentData = [...newData]\r\n      this.maxTime = maxTime\r\n      let option = chart.getOption()\r\n      option.series[0].data = convertData(this.currentData)\r\n      option.series[1].data = convertData(this.currentData.filter(data => data.firstReportTime >= this.maxTime - newEventSteps), true)\r\n\r\n      this.PollutionType2Keys = Object.keys(newPollutionType2Color)\r\n      option.series[0].itemStyle.color = (params) => {\r\n        let type = params.data.eventList[0].pollution\r\n        return newPollutionType2Color[type]\r\n      }\r\n      option.series[1].itemStyle.color = (params) => {\r\n        // console.log(params)\r\n        //   maxNum;\r\n        //   maxIndex;\r\n        // }\r\n        let type = params.data.eventList[0].pollution\r\n        return newPollutionType2Color[type]\r\n\r\n      }\r\n      chart.setOption(option)\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./amapEcharts.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./amapEcharts.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./amapEcharts.vue?vue&type=template&id=0d28fb1b&\"\nimport script from \"./amapEcharts.vue?vue&type=script&lang=js&\"\nexport * from \"./amapEcharts.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\r\n    event: {\r\n        oneStep: 3600 * 1000 * 24,\r\n        newBreakOut: 1 * 3600 * 1000 * 24\r\n    },\r\n    dateFormat: 'yyyy-mm-dd',\r\n    requestInterval: 1000,\r\n    defaultLimit: 10000,\r\n    maxLimit: 10000,\r\n    minLimit: 5000,\r\n    initTimeRange: 120 * 3600 * 1000 * 24, //初始数据为当前时间之前多少时间的数据\r\n    bufferSize: 120, //最多保存多少个step的数据\r\n    maxRequestStep: 1000,//一次最多请求多少个step（对应datepicker设置的值）\r\n    stepUnit: '天',\r\n    initModal: {\r\n        defaultUrl: '10.102.33.48:16393/EnvEvent/',\r\n        defaultTimeRange: [new Date(2022, 0, 1), new Date(2022,5,1)],\r\n\tdefaultToken:'5JJaxB'\r\n    },\r\n    initDownloadReport: {\r\n        defaultDownloadReportUrl: '10.102.33.48:10010/GenEventsReport/',\r\n        defaultDownloadReportToken:'oWd4Vv'\r\n    },\r\n    lnglatDecimal: 4, //地图经纬度精确位数（与打点精确度有关）\r\n}\r\n"],"sourceRoot":""}